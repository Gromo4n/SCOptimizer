from typing import List


class MakeDataset:
    def __init__(self):
        pass
    
    @staticmethod
    def get_all_params() -> List[str]:
        params = [
                'Название',
                'Живучесть',
                'Эффективность лечения',
                'Восстановление выносливости',
                'Скорость передвижения',
                'Выносливость',
                'Переносимый вес',
                'Пси-излучение',
                'Реакция на электричество',
                'Регенерация здоровья',
                'Реакция на разрыв',
                'Пулестойкость',
                'Защита от взрыва',
                'Защита от разрыва',
                'Биологическое заражение',
                'Реакция на хим. ожог',
                'Радиация',
                'Температура',
                'Кровотечение',
                'Защита от радиации',
                'Защита от пси-излучения',
                'Защита от температуры',
                'Реакция на ожог',
                'Стойкость',
                'Электрозащита',
                'Горение',
                'Защита от кровотечения',
                'Защита от биозаражения',
                'Срабатывает при',
                'Снижает урон на',
                'Перезарядка',
                'Заряда за активацию',
                'Отдача',
                'Покачивание',
                'Защита от огня',
                'Химзащита',
                'Периодическое лечение',
                'Холод'
        ]

        new_params = params.copy()
        for param_idx in range(1, len(params)):
            new_params.append("add_" + params[param_idx])
        
        return new_params
    
    def make_dataset(self, stats: dict) -> dict:
        all_params = self.get_all_params()
        result = {key: stats.get(key, "N/A") for key in all_params}
        return result